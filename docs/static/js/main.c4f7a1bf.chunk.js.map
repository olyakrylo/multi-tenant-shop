{"version":3,"sources":["components/MainPage/Search/Search.tsx","components/MainPage/ProductCard/ProductCard.tsx","data/productsList.ts","components/MainPage/MainPage.tsx","components/Admin/StatusCheckbox/StatusCheckbox.tsx","components/ImageInput/ImageInput.tsx","components/Admin/Product/AdminProduct.tsx","components/Admin/AddForm/AddForm.tsx","components/Auth/Auth.tsx","components/Admin/Admin.tsx","config.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Search","inputEmitter","className","icon","faSearch","onChange","event","target","value","ProductCard","name","price","img","isAvailable","src","alt","productsList","item_id","is_available","picture","MainPage","useState","products","setProducts","productsItems","sort","a","b","map","i","croppedValue","trim","toLowerCase","filter","item","includes","length","columnClassName","breakpointCols","default","1500","700","500","StatusCheckbox","available","setAvailable","onClick","ImageInput","initialSrc","imageElement","useRef","ref","type","onInput","current","window","URL","createObjectURL","nativeEvent","files","Control","editMode","setEditMode","faEdit","faTimesCircle","AdminProduct","placeholder","defaultValue","AddForm","setAddOpened","Auth","setToken","history","useHistory","loginElement","id","autoFocus","login","document","cookie","push","Admin","token","addOpened","foundProducts","config","App","tokenExpr","match","slice","getToken","authToken","location","pathname","setPathName","goToPath","path","logout","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c4f7a1bf.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Search.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface SearchProps {\n  inputEmitter: (value: string) => void;\n}\n\nexport function Search({ inputEmitter }: SearchProps) {\n  return (\n    <div className=\"search\">\n      <span className=\"search__title\">\n        <FontAwesomeIcon icon={faSearch} />\n        &nbsp;&nbsp;search\n      </span>\n      <input className=\"search__field\" onChange={event => inputEmitter(event.target.value)} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./ProductCard.css\";\n\ninterface ProductCardProps {\n  name: string;\n  price: number;\n  img: string;\n  isAvailable: boolean;\n}\n\nexport function ProductCard({ name, price, img, isAvailable }: ProductCardProps) {\n  return (\n    <div className=\"card\">\n      <img src={`./img/${img}`} className=\"card__image\" alt=\"\" />\n      <div className=\"card__name\">{name}</div>\n      <div className=\"card__price\">{price} ₽</div>\n\n      {!isAvailable && <div className=\"card__availability\"> Нет в наличии </div>}\n    </div>\n  );\n}\n","export type Product = {\n  item_id: string;\n  price: number;\n  is_available: boolean;\n  name: string;\n  picture: string;\n};\n\nexport const productsList: Product[] = [\n  {\n    item_id: \"0001\",\n    price: 1000,\n    is_available: true,\n    name: \"Букет #1\",\n    picture: \"b1.jpg\",\n  },\n  {\n    item_id: \"0002\",\n    price: 1239,\n    is_available: true,\n    name: \"Букет #2\",\n    picture: \"b2.jpg\",\n  },\n  {\n    item_id: \"0003\",\n    price: 1180,\n    is_available: false,\n    name: \"Мега букет\",\n    picture: \"b3.jpg\",\n  },\n  {\n    item_id: \"0004\",\n    price: 820,\n    is_available: true,\n    name: \"Супер букет\",\n    picture: \"b4.jpg\",\n  },\n  {\n    item_id: \"0005\",\n    price: 530,\n    is_available: true,\n    name: \"Букет #1\",\n    picture: \"b1.jpg\",\n  },\n  {\n    item_id: \"0006\",\n    price: 999,\n    is_available: true,\n    name: \"Букет #2\",\n    picture: \"b2.jpg\",\n  },\n  {\n    item_id: \"0007\",\n    price: 1310,\n    is_available: false,\n    name: \"Мега букет\",\n    picture: \"b3.jpg\",\n  },\n  {\n    item_id: \"0008\",\n    price: 1999,\n    is_available: true,\n    name: \"Супер букет\",\n    picture: \"b4.jpg\",\n  },\n  {\n    item_id: \"0009\",\n    price: 1050,\n    is_available: true,\n    name: \"Букет #1\",\n    picture: \"b1.jpg\",\n  },\n  {\n    item_id: \"0010\",\n    price: 2199,\n    is_available: true,\n    name: \"Букет #2\",\n    picture: \"b2.jpg\",\n  },\n  {\n    item_id: \"0011\",\n    price: 1850,\n    is_available: false,\n    name: \"Мега букет\",\n    picture: \"b3.jpg\",\n  },\n  {\n    item_id: \"0012\",\n    price: 1530,\n    is_available: true,\n    name: \"Супер букет\",\n    picture: \"b4.jpg\",\n  },\n];\n","import React, { useState } from \"react\";\nimport Masonry from \"react-masonry-css\";\nimport \"./MainPage.css\";\nimport { Search } from \"./Search/Search\";\nimport { ProductCard } from \"./ProductCard/ProductCard\";\nimport { productsList } from \"../../data/productsList\";\nimport { Product } from \"../../data/productsList\";\n\nexport function MainPage() {\n  let [products, setProducts] = useState(productsList);\n\n  function onSearchInput(value: string): void {\n    const croppedValue = value.trim().toLowerCase();\n    setProducts(productsList.filter(item => item.name.toLowerCase().includes(croppedValue)));\n  }\n\n  const productsItems = products\n    .sort((a, b) => a.price - b.price)\n    .map(({ name, price, picture, is_available }: Product, i) => {\n      return (\n        <ProductCard key={i} name={name} price={price} img={picture} isAvailable={is_available} />\n      );\n    });\n\n  const breakpointColumnsObj = {\n    default: 4,\n    1500: 3,\n    700: 2,\n    500: 1,\n  };\n\n  return (\n    <div className=\"main\">\n      <Search inputEmitter={onSearchInput} />\n\n      <div className=\"content__count\">Total count: {products.length}</div>\n\n      <Masonry\n        columnClassName=\"results__col\"\n        className=\"results\"\n        breakpointCols={breakpointColumnsObj}\n      >\n        {productsItems}\n      </Masonry>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./StatusCheckbox.css\";\n\ninterface StatusCheckboxProps {\n  available: boolean;\n  setAvailable: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function StatusCheckbox({ available, setAvailable }: StatusCheckboxProps) {\n  return (\n    <div className=\"status\">\n      <div\n        className={`status__option ${available && \"status__option_selected_green\"}`}\n        onClick={() => setAvailable(true)}\n      >\n        Available\n      </div>\n      <div\n        className={`status__option ${!available && \"status__option_selected_red\"}`}\n        onClick={() => setAvailable(false)}\n      >\n        Not available\n      </div>\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\nimport \"./ImageInput.css\";\n\ninterface ImageInputProps {\n  initialSrc?: string;\n}\n\nexport function ImageInput({ initialSrc }: ImageInputProps) {\n  const imageElement = useRef(null);\n\n  function updateImage(event: any): void {\n    try {\n      // @ts-ignore\n      imageElement!.current.src = window.URL.createObjectURL(event.nativeEvent.target.files[0]);\n    } catch {\n      return;\n    }\n  }\n\n  return (\n    <div className=\"image-input\">\n      <img ref={imageElement} src={initialSrc} className=\"image-input__image\" alt=\"\" />\n      <input type=\"file\" className=\"image-input__input\" onInput={updateImage} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./AdminProduct.css\";\nimport \"./Edit.css\";\nimport { Product } from \"../../../data/productsList\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle, faEdit } from \"@fortawesome/free-regular-svg-icons\";\nimport { StatusCheckbox } from \"../StatusCheckbox/StatusCheckbox\";\nimport { ImageInput } from \"../../ImageInput/ImageInput\";\n\ninterface Mode {\n  editMode: boolean;\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction Control({ editMode, setEditMode }: Mode) {\n  return (\n    <div className=\"product__control\">\n      <button className=\"product__control-btn\" onClick={() => setEditMode(!editMode)}>\n        <FontAwesomeIcon icon={faEdit} />\n      </button>\n      <button className=\"product__control-btn product__control-btn_red\">\n        <FontAwesomeIcon icon={faTimesCircle} />\n      </button>\n    </div>\n  );\n}\n\nexport function AdminProduct({ item_id, name, price, picture, is_available }: Product) {\n  const [editMode, setEditMode] = useState(false);\n  const [available, setAvailable] = useState(is_available);\n\n  function getNameElement() {\n    return editMode ? (\n      <input className=\"product__input product__name_edit\" placeholder=\"Name\" defaultValue={name} />\n    ) : (\n      <div className=\"product__name\">{name}</div>\n    );\n  }\n\n  function getPriceElement() {\n    return editMode ? (\n      <input className=\"product__input product__price_edit\" defaultValue={price} />\n    ) : (\n      <div className=\"product__price\">\n        {price} ₽&nbsp;&nbsp;&nbsp;\n        {is_available && <span className=\"product__status_available\">Available</span>}\n        {!is_available && <span className=\"product__status_not-available\">Not available</span>}\n      </div>\n    );\n  }\n\n  function getImageElement() {\n    return editMode ? (\n      <ImageInput initialSrc={`./img/${picture}`} />\n    ) : (\n      <img className=\"product__image-item\" alt=\"\" src={`./img/${picture}`} />\n    );\n  }\n\n  return (\n    <div className={`product ${editMode && \"product_edit\"}`}>\n      <div className={`product__image ${editMode && \"product__image_edit\"}`}>\n        {getImageElement()}\n      </div>\n\n      <div className={`product__id ${editMode && \"product__id_edit\"}`}>{item_id}</div>\n\n      {getNameElement()}\n\n      {getPriceElement()}\n\n      {editMode && (\n        <div className=\"product__av\">\n          <StatusCheckbox available={available} setAvailable={setAvailable} />\n        </div>\n      )}\n\n      {editMode && <button className=\"product__save\">Save</button>}\n\n      <Control editMode={editMode} setEditMode={setEditMode} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./AddForm.css\";\nimport { StatusCheckbox } from \"../StatusCheckbox/StatusCheckbox\";\nimport { ImageInput } from \"../../ImageInput/ImageInput\";\n\ninterface AddFormProps {\n  setAddOpened: (val: boolean) => void;\n}\n\nexport function AddForm({ setAddOpened }: AddFormProps) {\n  const [available, setAvailable] = useState(true);\n\n  return (\n    <form className=\"add__form\">\n      <div className=\"form-field form__name\">\n        <span className=\"form-field__title\">name</span>\n        <input className=\"form-field__input\" />\n      </div>\n\n      <div className=\"form-field form__price\">\n        <span className=\"form-field__title\">price</span>\n        <input className=\"form-field__input\" />\n      </div>\n\n      <StatusCheckbox available={available} setAvailable={setAvailable} />\n\n      <div className=\"form__buttons\">\n        <button className=\"form__btn form__btn_solid\">Add</button>\n        <button className=\"form__btn form__btn_transparent\" onClick={() => setAddOpened(false)}>\n          Cancel\n        </button>\n      </div>\n\n      <div className=\"form__image\">\n        <ImageInput />\n      </div>\n    </form>\n  );\n}\n","import React, { useRef } from \"react\";\nimport \"./Auth.css\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface AuthProps {\n  setToken: (token: string) => void;\n}\n\nexport function Auth({ setToken }: AuthProps) {\n  const history = useHistory();\n  const loginElement = useRef(null);\n\n  function onAuth(): void {\n    // @ts-ignore\n    const login = loginElement.current.value;\n    if (!login) return;\n\n    document.cookie = `token=${login}`;\n    setToken(login);\n  }\n\n  return (\n    <form className=\"auth\">\n      <input\n        ref={loginElement}\n        id=\"login\"\n        className=\"auth__input\"\n        placeholder=\"login\"\n        autoFocus={true}\n      />\n      <input id=\"password\" type=\"password\" className=\"auth__input\" placeholder=\"password\" />\n\n      <div className=\"auth__buttons\">\n        <button className=\"auth__button auth__button_solid\" onClick={onAuth}>\n          Auth\n        </button>\n        <button className=\"auth__button auth__button_transparent\" onClick={() => history.push(\"/\")}>\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./Admin.css\";\nimport { Search } from \"../MainPage/Search/Search\";\nimport { productsList } from \"../../data/productsList\";\nimport { AdminProduct } from \"./Product/AdminProduct\";\nimport { AddForm } from \"./AddForm/AddForm\";\nimport { Auth } from \"../Auth/Auth\";\n\ninterface AdminProps {\n  token: string;\n  setToken: (token: string) => void;\n}\n\nexport function Admin({ token, setToken }: AdminProps) {\n  let [products, setProducts] = useState(productsList);\n  let [addOpened, setAddOpened] = useState(false);\n\n  function onSearchInput(value: string): void {\n    const croppedValue = value.trim().toLowerCase();\n    const foundProducts = productsList.filter(\n      item => item.name.toLowerCase().includes(croppedValue) || item.item_id.includes(croppedValue),\n    );\n    setProducts(foundProducts);\n  }\n\n  if (!token) {\n    return <Auth setToken={setToken} />;\n  }\n\n  return (\n    <div className=\"admin\">\n      <div className={`admin__header ${addOpened ? \"admin__header_blocked\" : \"\"}`}>\n        <button className=\"admin__header-add\" onClick={() => setAddOpened(true)}>\n          Add product\n        </button>\n        <Search inputEmitter={onSearchInput} />\n      </div>\n\n      <div className={`admin__add ${addOpened && \"admin__add_open\"}`}>\n        <AddForm setAddOpened={setAddOpened} />\n      </div>\n\n      <ul className={`admin__list ${addOpened ? \"admin__list_blocked\" : \"\"}`}>\n        {products.map((item, i) => (\n          <li className=\"admin__product\" key={i}>\n            <AdminProduct\n              item_id={item.item_id}\n              price={item.price}\n              is_available={item.is_available}\n              name={item.name}\n              picture={item.picture}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","export const config = {\n  name: \"F&A\",\n};\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Admin, MainPage } from \"./components\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { config } from \"./config\";\n\nfunction App() {\n  const [authToken, setToken] = useState(getToken());\n  const history = useHistory();\n  const [pathname, setPathName] = useState(history.location.pathname);\n\n  function getToken() {\n    const tokenExpr = document.cookie.match(/token=[a-zA-Z0-9]+;?/);\n    if (!tokenExpr) return \"\";\n    return tokenExpr[0].slice(6);\n  }\n\n  function goToPath(path: string) {\n    setPathName(path);\n    history.push(path);\n  }\n\n  function getHeaderButtons() {\n    return (\n      <div>\n        {authToken && (\n          <button className=\"header__btn\" onClick={logout}>\n            log out\n          </button>\n        )}\n        {pathname === \"/admin\" ? (\n          <button className=\"header__btn\" onClick={() => goToPath(\"/\")}>\n            main\n          </button>\n        ) : (\n          <button className=\"header__btn\" onClick={() => goToPath(\"/admin\")}>\n            admin\n          </button>\n        )}\n      </div>\n    );\n  }\n\n  function logout() {\n    document.cookie = \"token=; max-age=-1\";\n    setToken(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <div className=\"header__logo\">{config.name}</div>\n        {getHeaderButtons()}\n      </div>\n\n      <div className=\"content\">\n        <Switch>\n          <Route exact path=\"/\" render={() => <MainPage />} />\n          <Route\n            exact\n            path=\"/admin\"\n            render={() => <Admin token={authToken} setToken={setToken} />}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}